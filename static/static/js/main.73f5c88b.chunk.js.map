{"version":3,"sources":["logo.svg","App.js","Loader.js","components/Bar.js","components/Pie.js","components/charts.js","components/ChartInit.js","components/NavBar.js","index.js"],"names":["App","Loader","useEffect","seconds","interval","setInterval","document","getElementById","innerHTML","window","location","reload","err","clearInterval","class","style","width","height","role","textAlign","id","Bar","props","state","data","label","this","elements","unshift","forEach","element","push","toString","setState","chartType","loader","React","Component","getRandomColor","color","i","Math","floor","random","Pie","convData","ele","points","title","value","dataEntry","round","percentage","ChartsInRow","className","d1","d2","CompleteCharts","toBeRendered","chartsComponents","type","init","renderCharts","length","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","target","fetch","then","response","json","res","data2","ReactDOM","render"],"mappings":"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","file":"static/js/main.73f5c88b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      df\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction Loader(){\r\n    useEffect(()=>{\r\n        var seconds=0;const firstMsg=60,secondMsg=120,thirdMsg=180;\r\n        const interval=setInterval(() => {\r\n            seconds++;\r\n            try{\r\n                if(seconds===firstMsg)\r\n                    document.getElementById(\"infoLoading\").innerHTML=\"<i>Starting backend...</i>\";\r\n                if(seconds===secondMsg)\r\n                    document.getElementById(\"infoLoading\").innerHTML=\"<i>Hold on...</i>\";\r\n                if(seconds===thirdMsg)\r\n                    document.getElementById(\"infoLoading\").innerHTML=\"<i>Try Loading again...</i>\";\r\n                if(seconds>=200)\r\n                    window.location.reload();\r\n            }\r\n            catch(err){\r\n                clearInterval(interval);\r\n            }\r\n            //console.log(seconds);\r\n        }, 1000);\r\n    });\r\n    return(\r\n        <div>\r\n             <div class=\"text-center\">\r\n                <div class=\"spinner-border text-primary\" style={{width: \"4rem\", height: \"4rem\"}} role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <p style={{textAlign:\"center\"}} id=\"infoLoading\"><i>Just a minute...</i></p>\r\n        </div>\r\n       \r\n    )\r\n}\r\nexport default Loader;","import { Chart } from \"react-google-charts\";\r\nimport React from \"react\";\r\n\r\nimport Loader from \"../Loader\";\r\n\r\nfunction getBar(data){\r\n    return <Bar data={data}/>\r\n}\r\n\r\nclass Bar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            data:[],\r\n            label:[],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props.data);\r\n        const data=this.props.data.elements;\r\n        //console.log(data);\r\n        data.unshift(\"Data\");\r\n        \r\n        const label=[];\r\n        data.forEach(element => {\r\n            label.push(element.toString());\r\n        });\r\n\r\n        label[0]=\"\";\r\n\r\n        //console.log(data,label);\r\n        this.setState({\r\n            data:data, \r\n            label:label\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width={'auto'}\r\n                height={'300px'}\r\n                chartType=\"Bar\"\r\n                loader={<Loader/>}\r\n                data={[\r\n                    this.state.label,\r\n                    this.state.data,\r\n                ]}\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport {getBar,Bar};\r\n","import Loader from \"../Loader\";\r\nimport React from \"react\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nfunction getPie(data){\r\n    return <Pie data={data}/>\r\n}\r\n\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n\r\nclass Pie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            data:<Loader/>,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props.data);\r\n        const data=this.props.data.elements;\r\n        //console.log(data);\r\n        const convData=[];\r\n\r\n        data.forEach(ele=>{\r\n            const points={\r\n                title:ele.toString(),\r\n                value:ele,\r\n                color:getRandomColor(),\r\n            };\r\n            convData.push(points);\r\n        });\r\n        //console.log(convData)\r\n        this.setState({data:convData});\r\n    }\r\n    render() {\r\n        return (\r\n            <PieChart\r\n                data={this.state.data}\r\n                label={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport {getPie,Pie};\r\n","import React from \"react\";\r\nimport  Loader from \"../Loader\";\r\nimport {init} from './ChartInit';\r\n\r\nfunction ChartsInRow(props){\r\n    return(\r\n        <div className=\"row\">\r\n            <br/>\r\n            <div className=\"col\">\r\n                {props.d1}\r\n                <br/>\r\n            </div>\r\n            <br/>\r\n            <div className=\"col\">\r\n            \r\n                {props.d2}\r\n                <br/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nclass CompleteCharts extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={toBeRendered:<Loader/>}\r\n    }\r\n    componentDidMount(){\r\n        //console.log(this.props.data);\r\n        const data=this.props.data;\r\n        const chartsComponents=init(data);\r\n        const renderCharts=[];\r\n        for(var i=0;i<chartsComponents.length;i++){\r\n            renderCharts.push(<ChartsInRow d1={chartsComponents[i]} d2={chartsComponents[i+1]} />);\r\n            renderCharts.push(<br/>);renderCharts.push(<br/>);\r\n            i++;    \r\n        }\r\n        this.setState({toBeRendered:renderCharts});\r\n    }\r\n    render(){\r\n        return(\r\n            this.state.toBeRendered\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompleteCharts;","import {Bar,getBar} from \"./Bar\";\r\nimport {Pie, getPie} from \"./Pie\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nfunction init(data){\r\n    const chartsComponents=[];\r\n    data.forEach(element => {\r\n       // console.log(element);\r\n       if(element.type===\"Bar\"){\r\n        chartsComponents.push(<Bar data={element}/>);\r\n       }\r\n       else{\r\n        chartsComponents.push(<Pie data={element}/>);\r\n       }\r\n    });\r\n\r\n    return chartsComponents;\r\n}\r\n\r\nexport {init};\r\n","\r\nexport default function NavBar(){\r\n    return(\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n            <h3><a class=\"navbar-brand\" >Welcome to MERN Charts</a></h3>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div class=\"navbar-nav\">\r\n                <h5><a class=\"nav-item nav-link\" href=\"/dataset\" target=\"_blank\">Dataset <span class=\"sr-only\">(current)</span></a></h5>\r\n                <h5> <a class=\"nav-item nav-link\" href=\"https://github.com/Spectre-ak/stunning-guacamole\" target=\"_blank\">Github</a></h5>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CompleteCharts from './components/charts';\r\nimport NavBar from './components/NavBar';\r\n\r\n\r\nfetch(\"/dataset\").\r\n\r\n  then(response => response.json()).then(res => {\r\n    //console.log(res);\r\n    const data2=res;\r\n    ReactDOM.render(\r\n\r\n      <div className=\"container\">\r\n        <NavBar/>\r\n        <br/>\r\n         <CompleteCharts data={data2} />\r\n      </div>\r\n\r\n      ,document.getElementById('root')\r\n    );\r\n  });\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals(console.log);\r\n"],"sourceRoot":""}